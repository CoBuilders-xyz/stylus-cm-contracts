import { runTypeChain, glob } from 'typechain';
import path from 'path';

async function generateExternalTypes() {
  console.log('🔍 Generating TypeScript types for external contracts...');

  const cwd = process.cwd();
  // Only generate types for external ABIs
  const allFiles = glob(cwd, [`${cwd}/abis/external/*.json`]);

  if (allFiles.length === 0) {
    console.log('⚠️  No external ABIs found to generate types for');
    return;
  }

  await runTypeChain({
    cwd,
    filesToProcess: allFiles,
    allFiles,
    outDir: path.join(cwd, 'build/typechain-types/external'),
    target: 'ethers-v6',
    flags: {
      alwaysGenerateOverloads: false,
      discriminateTypes: false,
      tsNocheck: false,
      environment: 'hardhat',
    },
  });

  console.log('🎉 External contract types generation completed!');
  console.log(
    '💡 Our contract types are already generated by Hardhat in build/typechain-types/'
  );
}

async function main() {
  try {
    await generateExternalTypes();
  } catch (error) {
    console.error('❌ Error generating external types:', error);
    process.exit(1);
  }
}

main();
